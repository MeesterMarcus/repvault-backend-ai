AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambda for interacting with AI

Resources:
  AiGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: aiGeneratorFunction
      Handler: dist/index.handler
      Runtime: nodejs18.x
      CodeUri: ./dist/
      MemorySize: 128
      Timeout: 60
      Policies:
        - Version: "2012-10-17"
          Statement:
            # Updated Secrets Manager permission
            - Effect: Allow
              Action: 
                - secretsmanager:GetSecretValue
              Resource: 
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/repvault-backend-ai/gemini-key*"
                # Add DynamoDB permissions
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:UpdateItem
                  Resource: !GetAtt UserUsageTable.Arn

  MyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod
      Auth:
        EnableIamAuthorizer: false
      CorsConfiguration:
        AllowMethods:
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: MyGeminiLambdaAPI
          version: '1.0'
        paths:
          /generate:
            post:
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AiGeneratorFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              security:
                - sigv4: []

  AiGeneratorFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AiGeneratorFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MyHttpApi}/*"

  UserUsageTable: # Add the DynamoDB Table resource
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserUsageTable
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST # Or ProvisionedThroughput if preferred
